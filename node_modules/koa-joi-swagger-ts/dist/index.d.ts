import * as Router from "koa-router";
export * from "./controller";
export * from "./definition";
export * from "./description";
export * from "./ischema";
export * from "./method";
export * from "./parameter";
export * from "./resolvers";
export * from "./response";
export * from "./summary";
export * from "./tag";
export interface ISwagger {
    swagger: string;
    info: {
        description?: string;
        version: string;
        title: string;
        termsOfService?: string;
        concat?: {
            email: string;
        };
        license?: {
            name: string;
            url: string;
        };
    };
    host?: string;
    basePath?: string;
    tags?: {
        name: string;
        description?: string;
        externalDocs?: {
            description: string;
            url: string;
        };
    }[];
    schemes: string[];
    paths: {};
    definitions: {};
}
export interface IPath {
    tags: string[];
    summary: string;
    description: string;
    operationId: string;
    consumes: string[];
    produces: string[];
    parameters?: any[];
    responses: any;
    security: any[];
}
export declare const DEFAULT_SWAGGER: ISwagger;
export declare const DEFAULT_PATH: IPath;
export declare class KJSRouter {
    swagger: ISwagger;
    router: Router;
    swaggerFileName: string;
    constructor(swagger?: ISwagger);
    loadController(Controller: any, decorator?: any): void;
    loadDefinition(Definition: any): void;
    setSwaggerFile(fileName: string): void;
    loadSwaggerUI(url: string): void;
    getRouter(): Router<any, {}>;
}
