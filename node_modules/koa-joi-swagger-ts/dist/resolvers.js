"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function safe(fn, throwNext) {
    return function (target, propertyKey) {
        const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);
        const originalMethod = descriptor.value;
        descriptor.value = async function NoErrorWrapper() {
            try {
                await originalMethod.apply(this, arguments);
            }
            catch (error) {
                if (typeof fn === 'function') {
                    await fn(error);
                }
                if (throwNext == true) {
                    throw error;
                }
            }
        };
        Object.defineProperty(target, propertyKey, descriptor);
        return descriptor;
    };
}
exports.safe = safe;
function before(...fn) {
    return function (target, propertyKey) {
        const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);
        const originalMethod = descriptor.value;
        descriptor.value = async function MethodsList() {
            fn.map(async (F) => await F.apply(this, arguments));
            await originalMethod.apply(this, arguments);
        };
        Object.defineProperty(target, propertyKey, descriptor);
        return descriptor;
    };
}
exports.before = before;
function after(...fn) {
    return function (target, propertyKey) {
        const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);
        const originalMethod = descriptor.value;
        descriptor.value = async function MethodsList() {
            await originalMethod.apply(this, arguments);
            fn.map(async (F) => await F.apply(this, arguments));
        };
        Object.defineProperty(target, propertyKey, descriptor);
        return descriptor;
    };
}
exports.after = after;
//# sourceMappingURL=resolvers.js.map