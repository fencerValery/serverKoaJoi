"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../..");
const __2 = require("../..");
const __3 = require("../..");
const joi = require("joi");
const __4 = require("../..");
const __5 = require("../..");
const __6 = require("../..");
const __7 = require("../..");
const __8 = require("../..");
let UserSchema = class UserSchema {
    constructor() {
        this.userName = joi.string().min(6).description('username').required();
    }
};
UserSchema = __decorate([
    __4.definition('User', 'User Entity')
], UserSchema);
exports.UserSchema = UserSchema;
let BaseController = class BaseController {
    index() {
    }
};
__decorate([
    __2.get('/'),
    __3.parameter('version', joi.string().description('version')),
    __5.summary('BaseController[index]'),
    __6.response(200),
    __7.description('home'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], BaseController.prototype, "index", null);
BaseController = __decorate([
    __1.controller('/v3/api')
], BaseController);
exports.BaseController = BaseController;
let UserController = class UserController extends BaseController {
    doGet() {
    }
    doPost() {
    }
    doDelete() {
    }
    doPut() {
    }
};
__decorate([
    __2.get('/'),
    __3.parameter('userName', joi.string().description('username')),
    __6.response(200, { $ref: UserSchema }),
    __6.response(201),
    __8.tag('User'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserController.prototype, "doGet", null);
__decorate([
    __2.post('/'),
    __3.parameter('user', joi.string().description('user'), __3.ENUM_PARAM_IN.body),
    __5.summary('UserController[doPost]'),
    __6.response(303),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserController.prototype, "doPost", null);
__decorate([
    __2.del('/{uid}'),
    __3.parameter('uid', joi.string().required().description('userID'), __3.ENUM_PARAM_IN.path),
    __7.description('Delete User'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserController.prototype, "doDelete", null);
__decorate([
    __2.put('/'),
    __3.parameter('token', joi.string().description('token'), __3.ENUM_PARAM_IN.header),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserController.prototype, "doPut", null);
UserController = __decorate([
    __1.controller('/user')
], UserController);
exports.UserController = UserController;
let AdminController = class AdminController extends UserController {
    doDelete() {
    }
};
__decorate([
    __2.del('/{adminId}'),
    __3.parameter('adminId', joi.string().required().description('admin id'), __3.ENUM_PARAM_IN.path),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], AdminController.prototype, "doDelete", null);
AdminController = __decorate([
    __1.controller('/admin')
], AdminController);
exports.AdminController = AdminController;
//# sourceMappingURL=index.js.map